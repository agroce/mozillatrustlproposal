The tool should, by project termination, have basic functionality similar to Python TSTL in place, be integrated with the Rust toolchain (cargo test, production of a test crate for libraries, etc.), and have a highly tuned method for generating tests that is sensitive to the test budget given by a user.  The metrics for the basic implementation should be clear, in that TSTL is a working system, and can serve as a baseline to compare against.  Additionally, TruSTL should be, by project completion, used to test at least four real, large, Rust projects, and to find a previously unknown fault or faults in at least two of these projects.  Given the success rate for TSTL with Python libraries, this is a reasonable goal, given that Rust projects are likely to have fewer bugs (due to static typing preventing some of the problems found in Python code).
